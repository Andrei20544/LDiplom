<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--DefaultTextBlock-->
    <Style TargetType="{x:Type TextBlock}">

        <Setter Property="Foreground" 
                Value="#FFE4E4E4"/>
        <Setter Property="Margin" 
                Value="2"/>
        <Setter Property="FontSize" 
                Value="20"/>
        <Setter Property="VerticalAlignment" 
                Value="Center"/>
        <Setter Property="FontFamily" 
                Value="/Resource/Fonts/VelaSansLight.ttf #Vela Sans Bd"/>

    </Style>

    <!--DefaultBTN-->
    <Style TargetType="{x:Type Button}">

        <Setter Property="Width" 
                Value="280"/>
        <Setter Property="Height" 
                Value="60"/>
        <Setter Property="BorderThickness" 
                Value="1"/>
        <Setter Property="BorderBrush" 
                Value="#FF1F4568"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="borderBTN"
                            CornerRadius="5"
                            Background="#224C73"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#183652"/>

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#152E45"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
                
            </Setter.Value>
            
        </Setter>

    </Style>

    <!--DefaultTextBox-->
    <Style TargetType="{x:Type TextBox}">

        <Setter Property="Width" 
                Value="260"/>
        <Setter Property="Height" 
                Value="40"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="FontSize" 
                Value="18"/>
        <Setter Property="Padding" 
                Value="10 0 0 0"/>

    </Style>


    <!--LoadGrid-->
    <Style TargetType="{x:Type Grid}"
           x:Key="LGrid">

        <Setter Property="Background"
                Value="#99000000"/>

    </Style>
    
    
    <!--CustomTextBox-->
    
    <Style TargetType="{x:Type TextBox}"
           x:Key="MainTextBox">

        <Setter Property="Width" 
                Value="280"/>
        <Setter Property="Height" 
                Value="50"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="FontSize" 
                Value="18"/>
        <Setter Property="Padding" 
                Value="13 0 0 0"/>
        <Setter Property="Background" 
                Value="#FF212C36"/>
        <Setter Property="Foreground" 
                Value="#FF2F5170"/>
        <Setter Property="BorderBrush"
                Value="#FF2C4359"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border x:Name="bord"
                            CornerRadius="5"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">

                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsFocused"
                                 Value="True">

                            <Setter Property="BorderThickness"
                                    Value="2"
                                    TargetName="bord"/>

                        </Trigger>
                        
                    </ControlTemplate.Triggers>

                </ControlTemplate>
                
            </Setter.Value>
            
        </Setter>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="UnderBoxTextBlock">

        <Setter Property="IsHitTestVisible" 
                Value="False"/>
        <Setter Property="Visibility" 
                Value="Collapsed"/>
        <Setter Property="Foreground" 
                Value="#FF3A536A"/>
        <Setter Property="Margin" 
                Value="17 0 0 0"/>
        <Setter Property="FontSize" 
                Value="20"/>
        <Setter Property="HorizontalAlignment"
                Value="Left"/>
        <Setter Property="VerticalAlignment" 
                Value="Center"/>
        <Setter Property="FontFamily" 
                Value="/Resource/Fonts/VelaSansLight.ttf #Vela Sans Bd"/>
        <Setter Property="FontWeight"
                Value="ExtraBold"/>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource UnderBoxTextBlock}"
           x:Key="UnderBoxTextBlockLogin">

        <Style.Triggers>

            <DataTrigger Binding="{Binding Text, ElementName=LTextBox}"
                         Value="">

                <Setter Property="Visibility"
                        Value="Visible"/>

            </DataTrigger>

        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource UnderBoxTextBlock}"
           x:Key="UnderBoxTextBlockPassword">

        <Style.Triggers>

            <DataTrigger Binding="{Binding Text, ElementName=PTextBox}"
                         Value="">

                <Setter Property="Visibility"
                        Value="Visible"/>

            </DataTrigger>

        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource UnderBoxTextBlock}"
           x:Key="UnderBoxTextBlockSearch">

        <Style.Triggers>

            <DataTrigger Binding="{Binding Text, ElementName=SearchBox}"
                         Value="">

                <Setter Property="Visibility"
                        Value="Visible"/>

            </DataTrigger>

        </Style.Triggers>

    </Style>

    <!--/CustomTextBox-->
    
    
    <!--PageStyle-->

    <Style TargetType="{x:Type TextBlock}"
           x:Key="DefaultPageTextBlock">

        <Setter Property="Foreground" 
                Value="Black"/>
        <Setter Property="Margin" 
                Value="2"/>
        <Setter Property="FontSize" 
                Value="20"/>
        <Setter Property="VerticalAlignment" 
                Value="Center"/>
        <Setter Property="FontFamily" 
                Value="/Resource/Fonts/VelaSansLight.ttf #Vela Sans Bd"/>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource DefaultPageTextBlock}"
           x:Key="TitlePageTextBlock">

        <Setter Property="Margin"
                Value="7 5 2 2"/>
        <Setter Property="FontWeight"
                Value="Black"/>

    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource DefaultPageTextBlock}"
           x:Key="PageTextBlock">

        <Setter Property="Foreground"
                Value="Black"/>
        <Setter Property="Width"
                Value="110"/>

    </Style>

    <Style TargetType="{x:Type Border}"
           x:Key="PageBorder">

        <Setter Property="Background"
                Value="#FFD6DAE2"/>
        <Setter Property="CornerRadius"
                Value="8"/>
        <Setter Property="Margin"
                Value="5"/>

    </Style>

    <Style TargetType="{x:Type StackPanel}"
           x:Key="PageStackPanel">

        <Setter Property="Margin"
                Value="5 0 0 0"/>

    </Style>

    <!--/PageStyle-->
    
    
    <!--CustomScrollBar-->

    <Style x:Key="ScrollThumbs" 
           TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    
                    <Grid x:Name="Grid">
                        
                        <Rectangle HorizontalAlignment="Stretch" 
                                   VerticalAlignment="Stretch" 
                                   Width="Auto" Height="Auto" 
                                   Fill="Transparent"/>
                        
                        <Border x:Name="ScrollBarRectangle" 
                                CornerRadius="5" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" 
                                Width="Auto" 
                                Height="Auto"  
                                Background="{TemplateBinding Background}" />
                        
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="Tag" Value="Horizontal">
                            
                            <Setter TargetName="ScrollBarRectangle" 
                                    Property="Width" 
                                    Value="Auto" />
                            <Setter TargetName="ScrollBarRectangle" 
                                    Property="Height" 
                                    Value="7" />
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Margin" 
                Value="5,0,0,0" />
        <Setter Property="Stylus.IsFlicksEnabled" 
                Value="false" />
        <Setter Property="Foreground" 
                Value="#FF212C36" />
        <Setter Property="Background" 
                Value="#7F253557" />
        <Setter Property="Width" 
                Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" 
                          Width="12" 
                          Background="{TemplateBinding Background}">
                        
                        <Track x:Name="PART_Track" 
                               IsDirectionReversed="true" 
                               Focusable="false">
                            
                            <Track.Thumb>
                                <Thumb x:Name="ScrollBarThumb" 
                                       Background="{TemplateBinding Foreground}" 
                                       Style="{StaticResource ScrollThumbs}" />
                            </Track.Thumb>
                            
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" 
                                              Command="ScrollBar.PageDownCommand" 
                                              Opacity="0" 
                                              Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" 
                                              Command="ScrollBar.PageUpCommand"
                                              Opacity="0" 
                                              Focusable="false" />
                            </Track.DecreaseRepeatButton>
                            
                        </Track>
                        
                    </Grid>

                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsEnabled" 
                                 Value="false">
                            <Setter TargetName="ScrollBarThumb" 
                                    Property="Visibility" 
                                    Value="Collapsed" />
                        </Trigger>
                        
                        <Trigger Property="Orientation" 
                                 Value="Horizontal">
                            <Setter TargetName="GridRoot" 
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            
                            <Setter TargetName="PART_Track" 
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            
                            <Setter Property="Width" 
                                    Value="Auto" />
                            <Setter Property="Height" 
                                    Value="8" />
                            <Setter TargetName="ScrollBarThumb" 
                                    Property="Tag" 
                                    Value="Horizontal" />
                            <Setter TargetName="PageDown" 
                                    Property="Command" 
                                    Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" 
                                    Property="Command" 
                                    Value="ScrollBar.PageRightCommand" />
                            
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" 
                                 Value="true">
                            <Setter Property="Foreground" 
                                    Value="#FF2C3B47"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--/CustomScrollBar-->

    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FF3B506E</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                              Offset="0" />
                <GradientStop Color="#600000FF"
                              Offset="0.4" />
                <GradientStop Color="#600000FF"
                              Offset="0.6" />
                <GradientStop Color="#000000FF"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--CustomListBox-->

    <Style x:Key="{x:Type ListBox}"
           TargetType="ListBox">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="MinWidth"
                Value="120" />
        <Setter Property="MinHeight"
                Value="95" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border"
                            CornerRadius="2">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Transparent" />
                        </Border.BorderBrush>
                        <ScrollViewer Margin="0"
                                      Focusable="false">
                            <StackPanel Margin="2"
                                        IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            
                            <Setter TargetName="Border"
                                    Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource DisabledControlLightColor}" />
                                </Setter.Value>
                            </Setter>
                            
                            <Setter TargetName="Border"
                                    Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                </Setter.Value>

                            </Setter>
                            
                        </Trigger>
                        
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                            
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBoxItem}"
           TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Margin"
                Value="0 0 0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Padding="2"
                            CornerRadius="8"
                            SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2 0 0 0"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="#FF344861"/>

                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--/CustomListBox-->
    
    
    <!--LogOutBTN-->

    <Style TargetType="{x:Type Button}"
           x:Key="LogOutBTN">

        <Setter Property="Width" 
                Value="40"/>
        <Setter Property="Height" 
                Value="40"/>
        <Setter Property="BorderThickness" 
                Value="1"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="borderBTN"
                            CornerRadius="1"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="#7FF3F3F3">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#7FF3F3F3"/>

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="Transparent"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!--/LogOutBTN-->


    <!--BTN_MINI-->
    <Style TargetType="{x:Type Button}"
           x:Key="BTN_MINI">

        <Setter Property="Width" 
                Value="140"/>
        <Setter Property="Height" 
                Value="40"/>
        <Setter Property="BorderThickness" 
                Value="0"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="borderBTN"
                            CornerRadius="5"
                            Background="#224C73">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#183652"/>

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#152E45"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!--CloseBTN-->
    <Style TargetType="{x:Type Button}"
           x:Key="CloseBTN">

        <Setter Property="Width" 
                Value="28"/>
        <Setter Property="Height" 
                Value="28"/>
        <Setter Property="Margin" 
                Value="5"/>
        <Setter Property="BorderThickness" 
                Value="0"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="borderBTN"
                            CornerRadius="360"
                            Background="#B93540">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#D03540"/>

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#A53540"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!--MinimizeBTN-->
    <Style TargetType="{x:Type Button}"
           x:Key="MinimizeBTN">

        <Setter Property="Width" 
                Value="28"/>
        <Setter Property="Height" 
                Value="28"/>
        <Setter Property="Margin" 
                Value="5"/>
        <Setter Property="BorderThickness" 
                Value="0"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="borderBTN"
                            CornerRadius="360"
                            Background="#FFA0A0A0"><!--#FFA0A0A0-->
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#FFBEBEBE"/> 

                        </Trigger>

                        <Trigger Property="IsPressed"
                                 Value="True">

                            <Setter Property="Background"
                                    TargetName="borderBTN"
                                    Value="#FF8D8D8D"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>
    

</ResourceDictionary>